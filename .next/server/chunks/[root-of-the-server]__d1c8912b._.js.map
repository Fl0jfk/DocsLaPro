{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 121, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/f.hacqueville/OneDrive%20-%20LYCEE%20LA%20PROVIDENCE%20NICOLAS%20BARRE/Code/docsLaPro/app/utils/voyageStore.ts"],"sourcesContent":["// app/utils/voyageStore.ts\r\nimport { S3Client, GetObjectCommand, PutObjectCommand } from \"@aws-sdk/client-s3\";\r\nimport { getSignedUrl } from \"@aws-sdk/s3-request-presigner\";\r\n\r\nexport const s3 = new S3Client({\r\n  region: \"eu-west-3\",\r\n  credentials: {\r\n    accessKeyId: process.env.ACCESS_KEY_ID!,\r\n    secretAccessKey: process.env.SECRET_ACCESS_KEY!,\r\n  },\r\n});\r\nexport const BUCKET = process.env.BUCKET_NAME!;\r\nconst KEY = \"voyages.json\";\r\n\r\nexport type PieceJointe = {\r\n  filename: string;\r\n  s3Key: string;\r\n  type: string;\r\n  buffer:string;\r\n};\r\n\r\nexport type VoyageEntry = {\r\n  id: string;\r\n  prenom: string;\r\n  nom: string;\r\n  email: string;\r\n  direction_cible: \"direction_ecole\" | \"direction_college\" | \"direction_lycee\";\r\n  type_activite: \"voyage\" | \"sortie\" | \"autre\";\r\n  destination: string;\r\n  objectifs: string;\r\n  date_depart: string;\r\n  date_retour: string;\r\n  effectif_eleves: number;\r\n  effectif_accompagnateurs: number;\r\n  pieces_jointes?: PieceJointe[];\r\n  etat: \"etape_1\" | \"etape_2\" | \"etape_3\" | \"refuse\" | \"valide\";\r\n  date_creation: string;\r\n  historique: { action: string; date: string; par: string }[];\r\n};\r\n\r\n// 📦 Lecture S3\r\nexport async function readVoyages(): Promise<VoyageEntry[]> {\r\n  try {\r\n    const obj = await s3.send(new GetObjectCommand({ Bucket: BUCKET, Key: KEY }));\r\n    const body = await obj.Body?.transformToString();\r\n    return body ? JSON.parse(body) : [];\r\n  } catch (err: any) {\r\n    if (err.$metadata?.httpStatusCode === 404) return [];\r\n    throw err;\r\n  }\r\n}\r\n\r\n// 💾 Écriture S3\r\nexport async function writeVoyages(entries: VoyageEntry[]) {\r\n  await s3.send(new PutObjectCommand({\r\n    Bucket: BUCKET,\r\n    Key: KEY,\r\n    Body: JSON.stringify(entries, null, 2),\r\n    ContentType: \"application/json\",\r\n  }));\r\n}\r\n\r\n// ➕ Ajouter un voyage\r\nexport async function addVoyage(entry: VoyageEntry) {\r\n  const voyages = await readVoyages();\r\n  voyages.push(entry);\r\n  await writeVoyages(voyages);\r\n}\r\n\r\n// ❌ Supprimer un voyage\r\nexport async function removeVoyage(id: string) {\r\n  const voyages = await readVoyages();\r\n  const filtered = voyages.filter(v => v.id !== id);\r\n  await writeVoyages(filtered);\r\n}\r\n\r\n// 🔑 URL pré-signée upload\r\nexport async function getUploadURL(filename: string): Promise<{ url: string; key: string }> {\r\n  const key = `voyages_files/${Date.now()}_${filename}`;\r\n  const command = new PutObjectCommand({ Bucket: BUCKET, Key: key });\r\n  const url = await getSignedUrl(s3, command, { expiresIn: 3600 });\r\n  return { url, key };\r\n}\r\n\r\n// 🔑 URL pré-signée download\r\nexport async function getDownloadURL(key: string): Promise<string> {\r\n  const command = new GetObjectCommand({ Bucket: BUCKET, Key: key });\r\n  return await getSignedUrl(s3, command, { expiresIn: 3600 });\r\n}\r\n"],"names":[],"mappings":"AAAA,2BAA2B;;;;;;;;;;;;;;;;;;;AAC3B;AACA;AAAA;;;AAEO,MAAM,KAAK,IAAI,6JAAQ,CAAC;IAC7B,QAAQ;IACR,aAAa;QACX,aAAa,QAAQ,GAAG,CAAC,aAAa;QACtC,iBAAiB,QAAQ,GAAG,CAAC,iBAAiB;IAChD;AACF;AACO,MAAM,SAAS,QAAQ,GAAG,CAAC,WAAW;AAC7C,MAAM,MAAM;AA6BL,eAAe;IACpB,IAAI;QACF,MAAM,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,qKAAgB,CAAC;YAAE,QAAQ;YAAQ,KAAK;QAAI;QAC1E,MAAM,OAAO,MAAM,IAAI,IAAI,EAAE;QAC7B,OAAO,OAAO,KAAK,KAAK,CAAC,QAAQ,EAAE;IACrC,EAAE,OAAO,KAAU;QACjB,IAAI,IAAI,SAAS,EAAE,mBAAmB,KAAK,OAAO,EAAE;QACpD,MAAM;IACR;AACF;AAGO,eAAe,aAAa,OAAsB;IACvD,MAAM,GAAG,IAAI,CAAC,IAAI,qKAAgB,CAAC;QACjC,QAAQ;QACR,KAAK;QACL,MAAM,KAAK,SAAS,CAAC,SAAS,MAAM;QACpC,aAAa;IACf;AACF;AAGO,eAAe,UAAU,KAAkB;IAChD,MAAM,UAAU,MAAM;IACtB,QAAQ,IAAI,CAAC;IACb,MAAM,aAAa;AACrB;AAGO,eAAe,aAAa,EAAU;IAC3C,MAAM,UAAU,MAAM;IACtB,MAAM,WAAW,QAAQ,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;IAC9C,MAAM,aAAa;AACrB;AAGO,eAAe,aAAa,QAAgB;IACjD,MAAM,MAAM,CAAC,cAAc,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE,UAAU;IACrD,MAAM,UAAU,IAAI,qKAAgB,CAAC;QAAE,QAAQ;QAAQ,KAAK;IAAI;IAChE,MAAM,MAAM,MAAM,IAAA,0MAAY,EAAC,IAAI,SAAS;QAAE,WAAW;IAAK;IAC9D,OAAO;QAAE;QAAK;IAAI;AACpB;AAGO,eAAe,eAAe,GAAW;IAC9C,MAAM,UAAU,IAAI,qKAAgB,CAAC;QAAE,QAAQ;QAAQ,KAAK;IAAI;IAChE,OAAO,MAAM,IAAA,0MAAY,EAAC,IAAI,SAAS;QAAE,WAAW;IAAK;AAC3D","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/f.hacqueville/OneDrive%20-%20LYCEE%20LA%20PROVIDENCE%20NICOLAS%20BARRE/Code/docsLaPro/app/api/travels/view-all/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { readVoyages } from \"@/app/utils/voyageStore\";\r\n\r\nexport async function GET() {\r\n  const voyages = await readVoyages();\r\n  return NextResponse.json(voyages);\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IACpB,MAAM,UAAU,MAAM,IAAA,4IAAW;IACjC,OAAO,gJAAY,CAAC,IAAI,CAAC;AAC3B","debugId":null}}]
}