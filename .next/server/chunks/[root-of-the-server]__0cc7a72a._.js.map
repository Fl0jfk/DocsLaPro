{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/f.hacqueville/OneDrive%20-%20LYCEE%20LA%20PROVIDENCE%20NICOLAS%20BARRE/Code/docsLaPro/app/api/documents/list/route.ts"],"sourcesContent":["import { NextRequest } from \"next/server\";\r\nimport { S3Client, ListObjectsV2Command } from \"@aws-sdk/client-s3\";\r\nimport { getAuth, clerkClient } from \"@clerk/nextjs/server\";\r\n\r\nconst s3 = new S3Client({\r\n  region: \"eu-west-3\",\r\n  credentials: { accessKeyId: process.env.ACCESS_KEY_ID!, secretAccessKey: process.env.SECRET_ACCESS_KEY!},\r\n});\r\n\r\nexport async function GET(req: NextRequest) {\r\n  const { userId } = getAuth(req);\r\n  if (!userId) { return new Response(JSON.stringify({ error: \"Non autorisÃ©\" }), { status: 401 });}\r\n  const client = await clerkClient();\r\n  const user = await client.users.getUser(userId);\r\n  const rawRole = user.publicMetadata.role ?? [];\r\n  const roles = Array.isArray(rawRole) ? rawRole : typeof rawRole === \"string\" ? [rawRole] : [];\r\n  const baseFolders: string[] = [];\r\n  if (roles.includes(\"professeur\")) baseFolders.push(\"professeurs/\");\r\n  if (roles.includes(\"administratif\")) baseFolders.push(\"administratif/\");\r\n  if (roles.includes(\"direction\")) baseFolders.push(\"direction/\");\r\n  if (roles.includes(\"comptabilite\")) baseFolders.push(\"Compta RH/\");\r\n  if (roles.includes(\"education\")) baseFolders.push(\"education/\");\r\n  const userFolders = [...new Set(baseFolders.map(f => `documents/${f}`))];\r\n  const url = new URL(req.url);\r\n  const prefixParam = url.searchParams.get(\"prefix\") || \"\";\r\n  try {\r\n    const allItems: { type: \"folder\" | \"file\"; name: string; path: string; ext?: string}[] = [];\r\n    for (const folderPrefix of userFolders) {\r\n      const effectivePrefix = prefixParam.startsWith(\"documents/\") ? prefixParam : `${folderPrefix}${prefixParam}`;\r\n      const command = new ListObjectsV2Command({ Bucket: process.env.BUCKET_NAME!, Prefix: effectivePrefix, Delimiter: \"/\"});\r\n      const response = await s3.send(command);\r\n      const folders = response.CommonPrefixes?.map(p => ({ type: \"folder\" as const, name: `${p.Prefix!.split(\"/\").slice(-2, -1)[0]} (${folderPrefix.replace(\"documents/\", \"\")})`, path: p.Prefix!, })) || [];\r\n      const files = (response.Contents || []) .filter(file => file.Key && !file.Key.endsWith(\"/\")).filter(file => [\".pdf\", \".doc\", \".docx\", \".xls\", \".xlsx\"].some(ext => file.Key!.toLowerCase().endsWith(ext)))\r\n        .map(file => ({type: \"file\" as const, name: file.Key!.split(\"/\").pop()!.replace(/\\.(pdf|docx?|xlsx?|xls)$/, \"\"), path: file.Key!, ext: file.Key!.split(\".\").pop()?.toLowerCase()}));\r\n      allItems.push(...folders, ...files);\r\n    }\r\n    const uniqueItems = Array.from(new Map(allItems.map(item => [item.path, item])).values());\r\n    return new Response(JSON.stringify(uniqueItems), { status: 200 });\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  } catch (err: any) {\r\n    console.error(\"Erreur S3:\", err);\r\n    return new Response(JSON.stringify({ error: err.message }), { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}