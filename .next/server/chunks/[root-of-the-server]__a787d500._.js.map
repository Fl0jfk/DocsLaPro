{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/f.hacqueville/OneDrive%20-%20LYCEE%20LA%20PROVIDENCE%20NICOLAS%20BARRE/Code/docsLaPro/app/api/ecoledirecte/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\n\r\nconst BASE_URL = \"https://api.ecoledirecte.com/v3/login.awp?v=4.83.1\";\r\nconst GTK_URL = \"https://api.ecoledirecte.com/v3/login.awp?gtk=1&v=4.83.1\";\r\n\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const body = await req.json();\r\n    const identifiant = body?.identifiant || process.env.ECOLE_DIRECTE_USER;\r\n    const motdepasse = body?.motdepasse || process.env.ECOLE_DIRECTE_PASS;\r\n    if (!identifiant || !motdepasse) {\r\n      return NextResponse.json({ error: \"⚠️ Identifiant et mot de passe requis\" }, { status: 400 });\r\n    }\r\n    const gtkRes = await fetch(GTK_URL, {\r\n      headers: {\r\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 Chrome/109.0.0.0 Safari/537.36\",\r\n      },\r\n    });\r\n    const cookies = gtkRes.headers.get(\"set-cookie\") || \"\";\r\n    const gtkMatch = cookies.match(/GTK=([^;]+)/);\r\n    if (!gtkMatch) {\r\n      return NextResponse.json({ error: \"⚠️ Impossible de récupérer GTK\" }, { status: 500 });\r\n    }\r\n    const GTK = gtkMatch[1];\r\n    const payload = {\r\n      identifiant,\r\n      motdepasse,\r\n      isRelogin: false,\r\n      uuid: \"1234\",\r\n    };\r\n    const loginRes = await fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        \"X-Gtk\": GTK,\r\n        \"Origin\": \"https://www.ecoledirecte.com\",\r\n        \"Referer\": \"https://www.ecoledirecte.com/\",\r\n        \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 Chrome/109.0.0.0 Safari/537.36\",\r\n      },\r\n      body: \"data=\" + encodeURIComponent(JSON.stringify(payload)),\r\n    });\r\n    const data = await loginRes.json();\r\n    if (data?.token) {\r\n      return NextResponse.json({ message: \"✅ Connexion réussie\", token: data.token, accounts: data.data?.accounts ?? [] });\r\n    } else {\r\n      return NextResponse.json({ error: \"❌ Identifiants invalides\", details: data }, { status: 401 });\r\n    }\r\n  } catch (err: any) {\r\n    return NextResponse.json({ error: \"⚠️ Erreur serveur\", details: err.message }, { status: 500 });\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,WAAW;AACjB,MAAM,UAAU;AAET,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,cAAc,MAAM,eAAe,QAAQ,GAAG,CAAC,kBAAkB;QACvE,MAAM,aAAa,MAAM,cAAc,QAAQ,GAAG,CAAC,kBAAkB;QACrE,IAAI,CAAC,eAAe,CAAC,YAAY;YAC/B,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAwC,GAAG;gBAAE,QAAQ;YAAI;QAC7F;QACA,MAAM,SAAS,MAAM,MAAM,SAAS;YAClC,SAAS;gBACP,cAAc;YAChB;QACF;QACA,MAAM,UAAU,OAAO,OAAO,CAAC,GAAG,CAAC,iBAAiB;QACpD,MAAM,WAAW,QAAQ,KAAK,CAAC;QAC/B,IAAI,CAAC,UAAU;YACb,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAiC,GAAG;gBAAE,QAAQ;YAAI;QACtF;QACA,MAAM,MAAM,QAAQ,CAAC,EAAE;QACvB,MAAM,UAAU;YACd;YACA;YACA,WAAW;YACX,MAAM;QACR;QACA,MAAM,WAAW,MAAM,MAAM,UAAU;YACrC,QAAQ;YACR,SAAS;gBACP,gBAAgB;gBAChB,SAAS;gBACT,UAAU;gBACV,WAAW;gBACX,cAAc;YAChB;YACA,MAAM,UAAU,mBAAmB,KAAK,SAAS,CAAC;QACpD;QACA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,IAAI,MAAM,OAAO;YACf,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;gBAAuB,OAAO,KAAK,KAAK;gBAAE,UAAU,KAAK,IAAI,EAAE,YAAY,EAAE;YAAC;QACpH,OAAO;YACL,OAAO,gJAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;gBAA4B,SAAS;YAAK,GAAG;gBAAE,QAAQ;YAAI;QAC/F;IACF,EAAE,OAAO,KAAU;QACjB,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;YAAqB,SAAS,IAAI,OAAO;QAAC,GAAG;YAAE,QAAQ;QAAI;IAC/F;AACF","debugId":null}}]
}