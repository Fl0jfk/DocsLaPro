// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/absences/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/absences">> = Specific
  const handler = {} as typeof import("../../app/absences/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/bdd/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/bdd">> = Specific
  const handler = {} as typeof import("../../app/bdd/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/affichePartnerAlisa/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/affichePartnerAlisa">> = Specific
  const handler = {} as typeof import("../../app/brouillons/affichePartnerAlisa/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/autorisationSortie/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/autorisationSortie">> = Specific
  const handler = {} as typeof import("../../app/brouillons/autorisationSortie/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/devisTransport/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/devisTransport">> = Specific
  const handler = {} as typeof import("../../app/brouillons/devisTransport/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/ficheInscriptionCinquieme/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/ficheInscriptionCinquieme">> = Specific
  const handler = {} as typeof import("../../app/brouillons/ficheInscriptionCinquieme/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/ficheInscriptionPremiereGenerale/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/ficheInscriptionPremiereGenerale">> = Specific
  const handler = {} as typeof import("../../app/brouillons/ficheInscriptionPremiereGenerale/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/ficheInscriptionPremiereST2S/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/ficheInscriptionPremiereST2S">> = Specific
  const handler = {} as typeof import("../../app/brouillons/ficheInscriptionPremiereST2S/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/ficheInscriptionQuatrieme/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/ficheInscriptionQuatrieme">> = Specific
  const handler = {} as typeof import("../../app/brouillons/ficheInscriptionQuatrieme/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/ficheInscriptionSeconde/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/ficheInscriptionSeconde">> = Specific
  const handler = {} as typeof import("../../app/brouillons/ficheInscriptionSeconde/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/ficheInscriptionSixieme/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/ficheInscriptionSixieme">> = Specific
  const handler = {} as typeof import("../../app/brouillons/ficheInscriptionSixieme/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/ficheInscriptionTerminaleGenerale/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/ficheInscriptionTerminaleGenerale">> = Specific
  const handler = {} as typeof import("../../app/brouillons/ficheInscriptionTerminaleGenerale/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/ficheInscriptionTerminaleST2S/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/ficheInscriptionTerminaleST2S">> = Specific
  const handler = {} as typeof import("../../app/brouillons/ficheInscriptionTerminaleST2S/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/ficheInscriptionTroisieme/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/ficheInscriptionTroisieme">> = Specific
  const handler = {} as typeof import("../../app/brouillons/ficheInscriptionTroisieme/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/ficheSanitaireLycee/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/ficheSanitaireLycee">> = Specific
  const handler = {} as typeof import("../../app/brouillons/ficheSanitaireLycee/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/portesOuvertes/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/portesOuvertes">> = Specific
  const handler = {} as typeof import("../../app/brouillons/portesOuvertes/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/portesOuvertesSVG/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/portesOuvertesSVG">> = Specific
  const handler = {} as typeof import("../../app/brouillons/portesOuvertesSVG/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brouillons/recapitulatifScolarite/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brouillons/recapitulatifScolarite">> = Specific
  const handler = {} as typeof import("../../app/brouillons/recapitulatifScolarite/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/documents/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/documents">> = Specific
  const handler = {} as typeof import("../../app/documents/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/organigramme/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/organigramme">> = Specific
  const handler = {} as typeof import("../../app/organigramme/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/qrcreator/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/qrcreator">> = Specific
  const handler = {} as typeof import("../../app/qrcreator/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/sign-in/[...rest]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/sign-in/[...rest]">> = Specific
  const handler = {} as typeof import("../../app/sign-in/[...rest]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/stocks/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/stocks">> = Specific
  const handler = {} as typeof import("../../app/stocks/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/teams/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/teams">> = Specific
  const handler = {} as typeof import("../../app/teams/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/travels/[id]/edit/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/travels/[id]/edit">> = Specific
  const handler = {} as typeof import("../../app/travels/[id]/edit/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/travels/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/travels/dashboard">> = Specific
  const handler = {} as typeof import("../../app/travels/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/travels/depot-devis/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/travels/depot-devis">> = Specific
  const handler = {} as typeof import("../../app/travels/depot-devis/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/travels/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/travels/new">> = Specific
  const handler = {} as typeof import("../../app/travels/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/uploadDocuments/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/uploadDocuments">> = Specific
  const handler = {} as typeof import("../../app/uploadDocuments/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/validationAbsences/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/validationAbsences">> = Specific
  const handler = {} as typeof import("../../app/validationAbsences/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/weekCalendar/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/weekCalendar">> = Specific
  const handler = {} as typeof import("../../app/weekCalendar/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/absence/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/absence/list">> = Specific
  const handler = {} as typeof import("../../app/api/absence/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/absence/pj/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/absence/pj">> = Specific
  const handler = {} as typeof import("../../app/api/absence/pj/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/absence/validate/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/absence/validate">> = Specific
  const handler = {} as typeof import("../../app/api/absence/validate/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/absence/want/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/absence/want">> = Specific
  const handler = {} as typeof import("../../app/api/absence/want/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/analyze-doc/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/analyze-doc">> = Specific
  const handler = {} as typeof import("../../app/api/analyze-doc/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/documents/get-url/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/documents/get-url">> = Specific
  const handler = {} as typeof import("../../app/api/documents/get-url/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/documents/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/documents/list">> = Specific
  const handler = {} as typeof import("../../app/api/documents/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/eleves/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/eleves/list">> = Specific
  const handler = {} as typeof import("../../app/api/eleves/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/eleves/update-fiche/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/eleves/update-fiche">> = Specific
  const handler = {} as typeof import("../../app/api/eleves/update-fiche/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/files/download/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/files/download">> = Specific
  const handler = {} as typeof import("../../app/api/files/download/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/inventory/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/inventory">> = Specific
  const handler = {} as typeof import("../../app/api/inventory/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/move-file/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/move-file">> = Specific
  const handler = {} as typeof import("../../app/api/move-file/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ocr-process/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ocr-process">> = Specific
  const handler = {} as typeof import("../../app/api/ocr-process/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/ocr-result/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/ocr-result">> = Specific
  const handler = {} as typeof import("../../app/api/ocr-result/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/pj-pdf/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/pj-pdf">> = Specific
  const handler = {} as typeof import("../../app/api/pj-pdf/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/travels/create/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/travels/create">> = Specific
  const handler = {} as typeof import("../../app/api/travels/create/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/travels/devis/request/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/travels/devis/request">> = Specific
  const handler = {} as typeof import("../../app/api/travels/devis/request/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/travels/devis/upload/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/travels/devis/upload">> = Specific
  const handler = {} as typeof import("../../app/api/travels/devis/upload/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/travels/get/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/travels/get">> = Specific
  const handler = {} as typeof import("../../app/api/travels/get/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/travels/list/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/travels/list">> = Specific
  const handler = {} as typeof import("../../app/api/travels/list/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/travels/presign/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/travels/presign">> = Specific
  const handler = {} as typeof import("../../app/api/travels/presign/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/travels/update/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/travels/update">> = Specific
  const handler = {} as typeof import("../../app/api/travels/update/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/travels/updateStatus/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/travels/updateStatus">> = Specific
  const handler = {} as typeof import("../../app/api/travels/updateStatus/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/upload-url/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/upload-url">> = Specific
  const handler = {} as typeof import("../../app/api/upload-url/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
