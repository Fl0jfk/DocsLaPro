{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/f.hacqueville/OneDrive%20-%20LYCEE%20LA%20PROVIDENCE%20NICOLAS%20BARRE/Code/docsLaPro/app/stocks/page.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { Html5QrcodeScanner } from \"html5-qrcode\";\r\n\r\nexport default function InventoryPage() {\r\n  type InventoryItem = { code: string; fournisseurs: string; type: string; date_achat: string; prix_unitaire: number; quantité: number;};\r\n  const [inventory, setInventory] = useState<Record<string, InventoryItem>>({});\r\n  const [temporaryInventory, setTemporaryInventory] = useState<Record<string, InventoryItem>>({});\r\n  const [scannedCodeAdd, setScannedCodeAdd] = useState<string>(\"\"); \r\n  const [scannedCodeRemove, setScannedCodeRemove] = useState<string>(\"\");\r\n  const [newItem, setNewItem] = useState({ code: \"\",fournisseurs:\"\" ,type: \"\", date_achat: \"\", prix_unitaire: 0, quantité: 0});\r\n  const [localChanges, setLocalChanges] = useState<boolean>(false);\r\n  const [errorMessage, setErrorMessage] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\"); \r\n  const [isPasswordCorrect, setIsPasswordCorrect] = useState<boolean>(false); \r\n  const [modificationsInProgress, setModificationsInProgress] = useState<InventoryItem[]>([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const startScanner = (setCodeFunction: (code: string) => void) => {\r\n    const scanner = new Html5QrcodeScanner(\"reader\", { fps: 10, qrbox: 250 }, false);\r\n    scanner.render(\r\n      (decodedText) => {\r\n        setCodeFunction(decodedText);\r\n        scanner.clear();\r\n        document.getElementById(\"reader\")!.innerHTML = \"\";\r\n      },\r\n      (errorMessage) => {\r\n        console.warn(errorMessage);\r\n      }\r\n    );\r\n  };\r\n  const generateBarcode = (code: string) => {\r\n    const codesPerPage = 27;\r\n    const codes = Array(codesPerPage).fill(code);\r\n    const newWindow = window.open(\"\", \"_blank\");\r\n    if (!newWindow) return;\r\n    newWindow.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>Impression Codes-Barres</title>\r\n          <script src=\"https://cdn.jsdelivr.net/npm/jsbarcode@3.11.0/dist/JsBarcode.all.min.js\"></script>\r\n          <style>\r\n            body { font-family: Arial, sans-serif; text-align: center; margin: 0; padding: 0; }\r\n            .container { display: grid; grid-template-columns: repeat(3, 1fr); gap: 5mm; width: 100%; margin: 10mm auto; }\r\n            .barcode-item { display: flex; justify-content: center; align-items: center; height: 33mm; }\r\n            canvas { width: 50mm; height: 15mm; }\r\n            @media print {\r\n              @page { size: A4; margin: 10mm; }\r\n            }\r\n          </style>\r\n        </head>\r\n        <body>\r\n          <div class=\"container\">\r\n            ${codes.map(() => `<div class=\"barcode-item\"><canvas class=\"barcode\"></canvas></div>`).join(\"\")}\r\n          </div>\r\n          <script>\r\n            window.onload = function() {\r\n              document.querySelectorAll(\".barcode\").forEach(canvas => {\r\n                JsBarcode(canvas, \"${code}\", { format: \"CODE128\", displayValue: false });\r\n              });\r\n              setTimeout(() => { window.print(); }, 500); // Attente pour l'affichage avant impression\r\n            };\r\n          </script>\r\n        </body>\r\n      </html>\r\n    `);\r\n    newWindow.document.close();\r\n  };\r\n  console.log(inventory)\r\n  console.log(isPasswordCorrect)\r\n  useEffect(() => {\r\n    fetch(\"/api/inventory\")\r\n      .then((res) => res.json())\r\n      .then((data: Record<string, InventoryItem>) => {\r\n        setInventory(data);\r\n        setTemporaryInventory(data);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Erreur de chargement du JSON\", err);\r\n      });\r\n  }, []);  \r\n  const handleScanAdd = async (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key !== \"Enter\") return;\r\n    const code = scannedCodeAdd.trim();\r\n    if (!code) return;\r\n    const updatedInventory = { ...temporaryInventory };\r\n    if (updatedInventory[code]) {\r\n      updatedInventory[code].quantité += 1;\r\n      setErrorMessage(\"\");\r\n      setTemporaryInventory(updatedInventory);\r\n    } else {\r\n      setErrorMessage(\"L'objet n'existe pas dans l'inventaire\");\r\n      return;\r\n    }\r\n    setModificationsInProgress((prev) => {\r\n      const existingIndex = prev.findIndex((mod) => mod.code === code);\r\n      if (existingIndex !== -1) {\r\n        return prev.map((mod, index) =>\r\n          index === existingIndex ? { ...mod, quantité: mod.quantité + 1 } : mod\r\n        );\r\n      } else {\r\n        return [...prev, { code,fournisseurs : updatedInventory[code].fournisseurs, type: updatedInventory[code].type, date_achat: updatedInventory[code].date_achat, prix_unitaire: updatedInventory[code].prix_unitaire, quantité: 1 }];\r\n      }\r\n    });    \r\n    setScannedCodeAdd(\"\"); \r\n    setLocalChanges(true);\r\n  };\r\n  const handleScanRemove = async (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key !== \"Enter\") return;\r\n    const code = scannedCodeRemove.trim();\r\n    if (!code) return;\r\n    const updatedInventory = { ...temporaryInventory };\r\n    if (updatedInventory[code]) {\r\n      if (updatedInventory[code].quantité > 0) {\r\n        updatedInventory[code].quantité -= 1;\r\n        setErrorMessage(\"\");\r\n        setTemporaryInventory(updatedInventory);\r\n        setModificationsInProgress((prev: InventoryItem[]) => {\r\n          const existingIndex = prev.findIndex((mod) => mod.code === code);\r\n          if (existingIndex !== -1) {\r\n            return prev.map((mod, index) =>\r\n              index === existingIndex ? { ...mod, quantité: mod.quantité - 1 } : mod\r\n            );\r\n          } else {\r\n            const itemFournisseurs = updatedInventory[code]?.fournisseurs || \"Fournisseurs inconnu\";\r\n            const itemType = updatedInventory[code]?.type || \"Type inconnu\";\r\n            const dateAchat = updatedInventory[code]?.date_achat || \"Inconnue\";\r\n            const prixUnitaire = updatedInventory[code]?.prix_unitaire || 0;\r\n            return [...prev, { code,fournisseurs:itemFournisseurs, type: itemType, date_achat: dateAchat, prix_unitaire: prixUnitaire, quantité: -1 }];\r\n          }\r\n        });\r\n      } else {\r\n        setErrorMessage(\"Quantité de l'objet déjà à zéro, ne peut pas être retiré\");\r\n      }\r\n    } else {\r\n      setErrorMessage(\"L'objet n'existe pas dans l'inventaire\");\r\n    }\r\n    setScannedCodeRemove(\"\");\r\n    setLocalChanges(true);\r\n  };\r\n  const handleNewItemSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (newItem.code && newItem.type && newItem.date_achat && newItem.prix_unitaire) {\r\n      const updatedInventory = { ...temporaryInventory, [newItem.code]: newItem };\r\n      setTemporaryInventory(updatedInventory);\r\n      setNewItem({ code: \"\",fournisseurs:\"\", type: \"\", date_achat: \"\", prix_unitaire: 0, quantité: 0 });\r\n      setLocalChanges(true);\r\n    } else {\r\n      console.error(\"Veuillez remplir tous les champs\");\r\n    }\r\n  };\r\n  const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  const handleConfirmChanges = async () => {\r\n    if (password === \"LaProNB76240\" && userName.trim() !== \"\") {\r\n      setIsPasswordCorrect(true);\r\n      try {\r\n        const res = await fetch(\"/api/inventory\", {\r\n          method: \"PUT\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ inventory: temporaryInventory,  userName,  password, modificationsInProgress}),\r\n        });\r\n        if (!res.ok) {\r\n          const errorData = await res.json();\r\n          throw new Error(errorData.message || \"Erreur inconnue\");\r\n        }\r\n        setInventory(temporaryInventory);\r\n        setTemporaryInventory(temporaryInventory);\r\n        alert(\"Inventaire mis à jour avec succès !\");\r\n      } catch (error: unknown) {\r\n        if (error instanceof Error) {\r\n          console.error(\"Erreur lors de la mise à jour de l'inventaire:\", error.message);\r\n          alert(`Erreur lors de la mise à jour : ${error.message}`);\r\n        } else {\r\n          console.error(\"Erreur inconnue\", error);\r\n          alert(\"Erreur inconnue lors de la mise à jour de l'inventaire.\");\r\n        }\r\n      }\r\n    } else {\r\n      alert(\"Veuillez entrer le mot de passe et le nom de l'utilisateur.\");\r\n    }\r\n  };\r\n  const exportInventory = () => {\r\n    fetch(\"https://docslapro.s3.eu-west-3.amazonaws.com/Stocks/inventory.json\")\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Erreur lors du téléchargement du fichier\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const blob = new Blob([JSON.stringify(data, null, 2)], {\r\n          type: \"application/json\",\r\n        });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = \"inventory.json\";\r\n        a.click();\r\n        URL.revokeObjectURL(url);\r\n      })\r\n      .catch((err) => {\r\n        console.error(\"Erreur de téléchargement :\", err);\r\n      });\r\n  };\r\n  return (\r\n    <main className=\"p-4 max-w-2xl mx-auto sm:pt-[13vh] md:pt-[13vh]\">\r\n      <h1 className=\"text-xl font-bold mb-4\">Gestion de l&apos;Inventaire</h1>\r\n      {errorMessage && <p className=\"text-red-500 mb-4\">{errorMessage}</p>}\r\n      <div className=\"relative\">\r\n  <input type=\"text\" value={scannedCodeAdd} onChange={(e) => setScannedCodeAdd(e.target.value)} onKeyUp={handleScanAdd} placeholder=\"Scannez un code-barres pour ajouter\" className=\"border p-2 w-full mb-2\"/>\r\n  <button type=\"button\" onClick={() => startScanner(setScannedCodeAdd)} className=\"bg-gray-500 text-white p-2 rounded w-full mt-2\">Scanner avec l&apos;appareil photo</button>\r\n  <div id=\"reader\" className=\"mt-2\"></div> {/* Scanner UI */}\r\n</div>\r\n<div className=\"relative\">\r\n  <input type=\"text\" value={scannedCodeRemove} onChange={(e) => setScannedCodeRemove(e.target.value)} onKeyUp={handleScanRemove} placeholder=\"Scannez un code-barres pour retirer\" className=\"border p-2 w-full mb-2\"/>\r\n  <button type=\"button\" onClick={() => startScanner(setScannedCodeRemove)} className=\"bg-gray-500 text-white p-2 rounded w-full mt-2\">Scanner avec l&apos;appareil photo</button>\r\n  <div id=\"reader\" className=\"mt-2\"></div> {/* Scanner UI */}\r\n</div>\r\n      <div className=\"overflow-x-auto w-full\">\r\n        <table className=\"w-full border-collapse border border-gray-300 mb-4\">\r\n          <thead>\r\n            <tr className=\"bg-gray-100\">\r\n              <th className=\"border p-2\">Code-barres</th>\r\n              <th className=\"border p-2\">Fournisseurs</th>\r\n              <th className=\"border p-2\">Type</th>\r\n              <th className=\"border p-2\">Date d&apos;achat</th>\r\n              <th className=\"border p-2\">Prix (€)</th>\r\n              <th className=\"border p-2\">Quantité</th>\r\n              <th className=\"border p-2\">Imprimer Code-Barres</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {Object.entries(temporaryInventory).map(([code, data]) => {\r\n              return (\r\n                <tr key={code} className=\"text-center\">\r\n                  <td className=\"border p-2\">{code}</td>\r\n                  <td className=\"border p-2\">{data.fournisseurs}</td>\r\n                  <td className=\"border p-2\">{data.type}</td>\r\n                  <td className=\"border p-2\">{data.date_achat}</td>\r\n                  <td className=\"border p-2\">{data.prix_unitaire}</td>\r\n                  <td className=\"border p-2\">{data.quantité}</td>\r\n                  <td className=\"border p-2\"><button onClick={() => generateBarcode(code)} className=\"bg-blue-500 text-white px-2 py-1 rounded\">Imprimer</button></td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      {modificationsInProgress.length > 0 && (\r\n        <div className=\"mb-4\">\r\n          <h2 className=\"text-lg font-semibold\">Modifications en cours</h2>\r\n          <div className=\"overflow-x-auto w-full\">\r\n            <table className=\"w-full border-collapse border border-gray-300 mb-4\">\r\n              <thead>\r\n                <tr className=\"bg-gray-100\">\r\n                  <th className=\"border p-2\">Code-barres</th>\r\n                  <th className=\"border p-2\">Fournisseurs</th>\r\n                  <th className=\"border p-2\">Type</th>\r\n                  <th className=\"border p-2\">Date d&apos;achat</th>\r\n                  <th className=\"border p-2\">Prix (€)</th>\r\n                  <th className=\"border p-2\">Quantité</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {modificationsInProgress.map((mod, index) => (\r\n                  <tr key={index} className=\"text-center\">\r\n                    <td className=\"border p-2\">{mod.code}</td>\r\n                    <td className=\"border p-2\">{mod.fournisseurs}</td>\r\n                    <td className=\"border p-2\">{mod.type}</td>\r\n                    <td className=\"border p-2\">{mod.date_achat}</td>\r\n                    <td className=\"border p-2\">{mod.prix_unitaire}</td>\r\n                    <td className=\"border p-2\">{mod.quantité}</td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      )}\r\n      <form onSubmit={handleNewItemSubmit} className=\"mb-4\">\r\n  <h2 className=\"text-lg font-semibold mb-2\">Ajouter un nouveau mobilier</h2>\r\n  <div className=\"space-y-2\">\r\n    <div>\r\n      <label htmlFor=\"code\" className=\"block text-sm font-medium text-gray-700\">Code-barres</label>\r\n      <input id=\"code\" type=\"text\" placeholder=\"Code-barres\" value={newItem.code} onChange={(e) => setNewItem({ ...newItem, code: e.target.value })} className=\"border p-2 w-full\"/>\r\n    </div>\r\n    <div>\r\n      <label htmlFor=\"fournisseurs\" className=\"block text-sm font-medium text-gray-700\">Fournisseurs</label>\r\n      <input id=\"fournisseurs\" type=\"text\" placeholder=\"Fournisseurs\" value={newItem.type} onChange={(e) => setNewItem({ ...newItem, fournisseurs: e.target.value })} className=\"border p-2 w-full\"/>\r\n    </div>\r\n    <div>\r\n      <label htmlFor=\"type\" className=\"block text-sm font-medium text-gray-700\">Type</label>\r\n      <input id=\"type\" type=\"text\" placeholder=\"Type\" value={newItem.type} onChange={(e) => setNewItem({ ...newItem, type: e.target.value })}className=\"border p-2 w-full\"/>\r\n    </div>\r\n    <div>\r\n      <label htmlFor=\"date_achat\" className=\"block text-sm font-medium text-gray-700\">Date d&apos;achat</label>\r\n      <input id=\"date_achat\" type=\"date\" placeholder=\"Date d'achat\" value={newItem.date_achat} onChange={(e) => setNewItem({ ...newItem, date_achat: e.target.value })} className=\"border p-2 w-full\"/>\r\n    </div>\r\n    <div>\r\n      <label htmlFor=\"prix_unitaire\" className=\"block text-sm font-medium text-gray-700\">Prix (€)</label>\r\n      <input id=\"prix_unitaire\" type=\"number\" placeholder=\"Prix (€)\" value={newItem.prix_unitaire}  onChange={(e) => setNewItem({ ...newItem, prix_unitaire: +e.target.value })} className=\"border p-2 w-full\"/>\r\n    </div>\r\n  </div>\r\n  <button type=\"submit\" className=\"mt-4 p-2 bg-green-500 text-white rounded-xl\">Ajouter le mobilier</button>\r\n</form>\r\n      {localChanges && (\r\n        <div className=\"mb-4\">\r\n          <input  type=\"text\"  placeholder=\"Entrez votre nom\"  value={userName}  onChange={(e) => setUserName(e.target.value)}  className=\"border p-2 w-full\" />\r\n          <input type=\"password\" placeholder=\"Entrez le mot de passe pour valider\" value={password} onChange={handlePasswordChange} className=\"border p-2 w-full\"/>\r\n          <button onClick={handleConfirmChanges} className=\"mt-4 p-2 bg-blue-500 text-white rounded-xl\">Valider les changements</button>\r\n        </div>\r\n      )}\r\n      <button onClick={exportInventory} className=\"mt-4 p-2 bg-yellow-500 text-white rounded-xl\">Télécharger les stocks sur le serveur</button>\r\n    </main>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}